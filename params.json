{"name":"Timex","tagline":"","body":"### Speed up your GoPro Videos.\r\nUse this BASH script to process your GoPro videos on the command line.  This script uses ffmpeg, mplayer, mjpegtools(optional), youtube-upload(optional):\r\n\r\n```\r\nUsage: timex -n [name] -r [rate] -m -s -y -h\r\n\t-n\tNew name for file, default is the date + rate\r\n\t-r\tRate to speed up video, default is 24\r\n\t-m\tUse mjpeg tools to compress video\r\n\t-s\tsilent - do not include audio\r\n\t-y\tUpload to Youtube\r\n\t\tProgram will ask for name, description, user and password\r\n\t-h\tThis help message\r\n\r\n\tTools needed to run this script:\t\r\n\t\t\tffmpeg\t(Video I/O)\r\n\t\t\tmjpegtools  (Video Compression)\r\n\t\t\tmplayer\t (Audio Compression)\r\n\t\t\tyoutube-upload  (Command Line upload to Youtube)\r\n```\r\n\r\n### Required -vs- Optional\r\nffmpeg does the heavy lifting in this script.  mplayer is used to compress the audio.  The resulting file's quality improves and render time decreases if you add mjpegtools. youtube-upload is only needed if you want the script to automatically upload the final file up to youtube.\r\n\r\n### Moving Forward\r\nI'm still working on ways to improve the quality of video compression using just ffmpeg.  I also plan to add jpg to video functionality to the script in the near future.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}